[
  {
    "path": "posts/2022-03-02-checkers/",
    "title": "Checkers",
    "description": "A checkers game with a really powerful GUI using OpenGL. Test your skills against your friend or a bot trained using the Alpha Beta Prunning algorithm.",
    "author": [
      {
        "name": "Tommy Smale",
        "url": {}
      }
    ],
    "date": "2022-03-02",
    "categories": [],
    "contents": "\nChecker board\n There is an algorithm which determines what moves are permitted for each checker piece. The user can select any valid piece and move it to any valid square. When a hit is made the opposing piece is eliminated from the game. There is a mode where the user can play against an agent trained using artificial intelligence.\nHow it’s made - checker piece\n To make a checker piece one must draw a lot of triangles in a shape to resemble a circle. By adjusting the sine and cosine of 2/3rds of the coordinates we can closely resemble a circle with enough triangles. It also wouldn’t be possible without the help of radians.\nHow it’s made - checker board\n Everything in OpenGL is just a triangle. All the 3 coordinates for each triangle must be calculated manually. Along with an red, green, blue, alpha value in the range 0-1 for each corresponding (X, Y) coordinate. Then a buffer is binded to OpenGL and a call to the glDrawArrays() function is made. We specify the vertex shader than the OpenGL engine assembles the triangle shape, rasterizes it, fragments it, and blends it.\n\n\n\n",
    "preview": {},
    "last_modified": "2022-03-02T04:55:42-08:00",
    "input_file": {}
  },
  {
    "path": "posts/2022-03-02-firehistory/",
    "title": "California Fire History",
    "description": "Analyzing official California Fire History data collected by government agencies dating back to the late 1800's. This is done using the R programming language.",
    "author": [
      {
        "name": "Tommy Smale",
        "url": {}
      }
    ],
    "date": "2022-03-02",
    "categories": [],
    "contents": "\nIntroduction\nCalifornia has had our largest fires in recorded history the last 2 years. Fires have had an effect on everyone in California weather it be due to air quality, or loss of property and loved ones. One school morning I woke up to a sky full of dark smoke, the smoke was so bad I could barely see down the block. Since that day in Chico there have been multiple other instances where smoke has blanketed the skies of California and ash has fallen from the skies. Smoke over the horizon is a terrible feeling as life as you know it can rapidly change without there being anything you can do about it. As a data science student, we are often just on our computer but we are learning complex skills which we can apply to the real world to make a difference. This project is a great opportunity to spend our time helping in the effort to solve current real world problems.\nGoal\nI will be exploring this fire perimeter dataset to learn more about what measures cal fire is taking to combat fires. I would like to see if I can tell if any of these measures have been successful or unsuccessful. In addition I would like to see what is causing these fires in California. I would like to see just how many acres are burning and what areas have been affected the most.\nMy initial data science questions are\nWhat were some of the biggest fires in California history?\nWhich agencies respond to the most fires?\nHow long does it take for fires to be contained?\nWhat causes the biggest fires?\nAre certain causes of fires becoming more or less frequent?\nCan the fire cause be predicted?\nIs there a relationship between year and fire size?\nAre no burn days effective in preventing human caused fires?\nCan we calculate what troops are the busiest?\nIs there a linear relationship between fire size and duration?\nAbout the dataset\nI am using the 2020 California Fire Perimeters data set available from gis.data.gov. A fire perimeter is the boundary of a fire measured by acres in this data set. This data set includes data from many different government agencies from different time periods. This data set includes prescribed burns and wildfire perimeters dating back to 1950 for CAL FIRE. Data from 2021 is not released until the fire season is over, which is on going at the time of this (Dec 18 2021). The United States Forest Service, USFS, has submitted records as far back as 1878 and the National Park Service, NPS, has submitted records from as far back as 1921. The types of fires included in this report has varied over the centuries which may add bias to the results. A couple important notes about the data is that from 1950 to 2001 it included USFS fires 10 acres and greater and CAL FIRE fires 300 acres and greater. BLM and NPS started inputting data since 2002 collecting fires 10 acres and greater. From 2002-2014 CAL FIRE expanded its criteria by including timber fires 10 acres or greater, brush fires 50 acres and greater, grass fires 300 acres and greater in size, wild land fires destroying 3 or more structures, and wild land fires causing 300,000 or more in damage. From 2014 and on the monetary requirement was dropped and the damage requirement is 3 or more habitable structures or commercial structures. In 1989 each unit was assigned to verify all 300 plus Acre fires from pre 1989 and as a result there is a statewide GIS layer from 1950-1999. Some errors that could occur when exploring this data is that duplicates may exist. For example, USFS and CAL FIRE could both capture the fire perimeter and submit it. In some cases they could even report different parameters of the same fire. While duplicate records is rare, there is an asterisk next to the cells that are the most accurate.\nExplanation of variables\nYEAR This set contains fire data from 1878 to 2020.\nSTATE While this data set is from CALFIRE there is some data from Oregon, Nevada, and Arizona. This data reports fires that occurred in both states, it does not specify the origin.\nAGENCY Different services may respond to the fires depending on jurisdiction. These services provide data to Cal Fire as a courtesy Different values we may see are CDF for California Department of Forestry and Fire Protection (Cal Fire), United States Forest Service (USFS), Bureau of Land Management (BLM), National Park Service (NPS), Contract Country (CC), Other FED (Federal Fire Protection Agency).\nUNIT_ID This is a series of digits to uniquely identify what units are responding to the fire.\nFIRE_NAME Fires are often named for geographic location or nearby landmarks like roads, lakes, rivers, and mountains.\nINC_NUM Number assigned by thee Emergency Command Center of the responsible agency for the fire.\nALARM_DATE The date the fire was brought to the attention of CALFIRE.\nCONT_DATE The date the fire was contained. A fire is 100% contained when a perimeter has been formed around the fire that will prevent it from spreading beyond the line. To form the perimeter fire fighters may use trenches (normally 10-12 feet and shallow), natural barriers like rivers, or even already burned patches of land. Once a fire is contained it may still be burning but within the perimeter.\nCAUSE An enumeration of values 1-19 for the reason the fire started. Enumeration 4 is campfire but enumeration 19 is illegal alien campfire which is confusing. Another confusing enumeration is 12 and 13 for firefighter training and non-firefighter training. Wouldn’t every fire that wasn’t firefighter training fall under this category of non-firefighter training. Interesting enumerations is 18 for escaped prescribed burn, 17 volcanic, 11 power line, 7 arson, 14 unknown, and 16 aircraft.\nCOMMENTS Miscellaneous comments that can provide more information about the fire.\nREPORT_AC Estimated area consumed in fire reported in acres.\nGIS_ACRES GIS is a geographic information system that uses information from satellites to make inferences. This is numerical data and the units are acres. Given the data is more complete for GIS_ACRES we will be working with this mostly.\nC_METHOD The method used to collect perimeter data. C stands for collection here. This is a range of digits from 1-8 that can be GPS, infrared, photos, hand drawn, or mixed collection methods.\nOBJECTIVE Either 1 suppression (wildfire) or 2 resource benefit (WFU). A WFU is allowing naturally ignited wild land fires like those started by lightning or lava to burn when in inaccessible terrain where people are not threatened. This is to avoid putting firefighters at risk and keep the land healthy.\nFIRE_NUM This has no description and is unclear at the moment. It is probably a method used to identify fires. There is not much research on it either, this will mostly be ignored.\nSHAPE_Length This is most likely GIS data. These map units are based on the coordinate system it could be square meters or something else. It could also be angular or linear.\nSHAPE_Area The units are unknown.\nDiscovery:\n\n[1] \"The fire dataset dimensions are (21318, 17)\"\n\n\n\nmissing_data <- c(1:ncol(fires))\nfor(col in 1:ncol(fires)) { \n  colname <- colnames(fires)[col]\n  nans <- sum(is.na(fires[, col]))\n  bad_strings <- c('', ' ', \"UNKNOWN\", \"UKNOWN\", \"N/A\")\n  bad_strings_count <- sum(fires[, col] %in% bad_strings)\n  zeros <- sum(fires[, col] <= 0)\n  total <- 0\n  if(!is.na(nans)) { \n    total <- nans \n  }\n  if(!is.na(bad_strings_count)) { \n    total <- total + bad_strings_count\n  }\n  if(!is.na(zeros)) { \n    total <- total + zeros\n  }\n  missing_data[col] <- total\n}\nmissing_data <- data.frame(colnames(fires), missing_data)\ncolnames(missing_data) <- c(\"Column\", \"Num NA's, '', or <= 0's\")\nmissing_data\n\n\n         Column Num NA's, '', or <= 0's\n1          year                      77\n2         state                       6\n3        agency                      10\n4       unit_id                      46\n5     fire_name                   13416\n6       inc_num                    1852\n7    alarm_date                   10728\n8     cont_date                   25360\n9         cause                      48\n10     comments                   36974\n11    report_ac                   12551\n12    gis_acres                       7\n13     c_method                   12222\n14    objective                     195\n15     fire_num                    8123\n16 shape_length                       0\n17   shape_area                   21317\n\nThere are many ways to deal with missing data like ignoring it or changing them to the mean or median. It is important to not change the integrity of the data if you manipulate missing data. The majority of the NA’s are in columns report_ac and c_method which means I will use shape_area instead. The rest of the values mostly come from missing values like ’’. This does not matter so much for comments but is a concern for inc_num, alarm_date, cont_data, and fire_num. For fire_name, many of the “UNKNOWN” fire names may stem from small prescribed burns. This is something to keep in mind as I use this data and will check to see if those old values originate from the older data or not.\nBrief summaries of every variable\nYEAR\n\n[1] \"The range of years in the dataset is from 1878 to 2020\"\n\n\nThis graph does not prove that more fires are occurring every year because we do not know how accurate reporting is in the early 1900s. CAL FIRE has data set going back to 1950 but USFS has data from 1878 in here. The two years with the most amount of data is 2017 and 2020 which has had the worse fires in recent history.\nSTATE\n\nTable 1: Number of observations for each state\nstates\nFreq\nAZ\n1\nCA\n21226\nNV\n73\nOR\n15\n\nNo fires that happened out of this state were under jurisdiction of Cal Fire which suggests these fires may have originated outside of California. These fires can be potentially misleading since the boundary can include both California and the other state. There is no way to determine what the boundary is for the California part of the fire.\nAGENCY\n\nTable 2: Number of reports by each agency\nagency\nnum_fires\nUSF\n9556\nCDF\n6563\nCCO\n3222\nNPS\n1011\nBLM\n652\nDOD\n163\nLRA\n111\nFWS\n22\nBIA\n12\nOTH\n1\n\nSurprisingly the United States Forest Service has been in charge of more fires than CalFire. However, this is likely due to them reporting many smaller prescribed burns. I wonder who is in charge of more land, and how jurisdiction is delegated. Private (PVT) was an option in the official documentation but there appears to be no occurrences in this data set. It seems like the groups to pay the most attention to are BLM, CCO, CDF, LRA, NPS, and USF.\n\n\n\n\n\n\nWe continue to see that the National Park Service has jurisdiction over more large fires than CAL Fire. Despite the increase of fires in recent years, the number of contracted counties in charge of fires has decreased. However, the Bureau of Land Management and National Park Service have been increasing their aid in combating California Fires.\nUNIT_ID\n\n\nout_of_state_units <- fires %>% \n  select(state, unit_id) %>% \n  filter(state != \"CA\" & state != \"\" & !is.na(state) & unit_id != '') %>% \n  unique()\nin_state_units <- fires %>% \n  select(state, unit_id) %>% \n  filter(state == \"CA\" & state != '' & !is.na(state) & unit_id != '') %>%\n  unique()\n#See if there are any units belonging to both states\ncross_state_units <- c() \nfor(row in 1:nrow(in_state_units)) { \n  unit <- in_state_units[row, \"unit_id\"]\n  if(sum(out_of_state_units[, \"unit_id\"] == unit) > 0) { \n    cross_state_units <- c(cross_state_units, unit)\n    }\n}\ncross_state_units_df <- fires %>% \n  filter(unit_id == cross_state_units & state != '' & !is.na(state)) %>% \n  select(state, agency, unit_id, gis_acres, fire_name) %>% \n  group_by(state, agency, unit_id) %>% \n  summarise(gis_acres_total = sum(gis_acres)) %>% \n  arrange(unit_id)\nkable(cross_state_units_df, caption = \n        \"The following units were responsible for fires in multiple states\")\n\n\nTable 3: The following units were responsible for fires in multiple states\nstate\nagency\nunit_id\ngis_acres_total\nCA\nBLM\nCCD\n1392.92076\nNV\nBLM\nCCD\n25.46643\nCA\nUSF\nHTF\n26751.67800\nNV\nUSF\nHTF\n14267.09300\nCA\nUSF\nKNF\n235463.13349\nOR\nUSF\nKNF\n476.97339\nCA\nBLM\nNOD\n18492.59674\nNV\nBLM\nNOD\n17.40460\nCA\nUSF\nTMU\n3092.50918\nCA\nUSF\nTOI\n18235.83105\nNV\nUSF\nTOI\n10366.60557\n\nThe reason that there are some units in charge of fires in multiple states is because they belong to federal organizations like United States Forest Service or Bureau of Land Management.\n\n\ncalfire_units_biggest_fire <- fires %>% \n  filter(agency == \"CDF\" & !is.na(gis_acres)) %>% \n  group_by(unit_id) %>% \n  slice(which.max(gis_acres)) %>% \n  select(year, agency, unit_id, fire_name, gis_acres) %>% \n  arrange(desc(gis_acres)) %>% \n  head(n=10)\nkable(calfire_units_biggest_fire, caption=\"CAL FIRE Units that Responded to the Top 10 Biggest Fires in California History\")\n\n\nTable 4: CAL FIRE Units that Responded to the Top 10 Biggest Fires in California History\nyear\nagency\nunit_id\nfire_name\ngis_acres\n2018\nCDF\nLNU\nRANCH\n410202.47\n2020\nCDF\nSCU\nSCU COMPLEX\n396399.00\n2007\nCDF\nSBC\nZACA\n240358.70\n2018\nCDF\nSHU\nCARR\n229651.41\n1977\nCDF\nBEU\nMARBLE-CONE\n173333.45\n2007\nCDF\nMVU\nWITCH\n162070.47\n2018\nCDF\nBTU\nCAMP\n153335.56\n1990\nCDF\nTGU\nCAMPBELL\n131504.22\n2020\nCDF\nCZU\nCZU LIGHTNING COMPLEX\n86553.46\n1985\nCDF\nSLU\nLAS PILITAS\n84271.42\n\nI would like to calculate the busiest years for each unit, however an accurate way of calculating this is stopping me. Factors to consider are center, spread, range, count, and max fires for each unit every year. I need a function that will return the hardest year based off this data.\nFIRE_NAME\n\n\n#There's still other bad fire names in the data set\nbad_fire_names <- c(\"UNKNOWN\", \"N/A\", \"\", \"UKNOWN\", \" \")\npopular_fire_names <- fires %>%\n  filter(!is.na(fire_name)) %>% \n  subset(!(fire_name %in% bad_fire_names)) %>% \n  group_by(fire_name) %>% \n  count(name=\"count\") %>% \n  arrange(desc(count)) %>% \n  head(n=10)\nkable(popular_fire_names, caption=\"10 Most Popular Names for Fires\")\n\n\nTable 5: 10 Most Popular Names for Fires\nfire_name\ncount\nCANYON\n45\nRIVER\n39\nLAKE\n37\nCREEK\n35\nCOTTONWOOD\n33\nBEAR\n32\nRIDGE\n30\nRANCH\n28\nSPRING\n28\nPINE\n27\n\n\n\nbiggest_fire_names <- fires %>% \n  arrange(desc(gis_acres)) %>% \n  select(year, fire_name, gis_acres) %>% \n  head(n=5)\nkable(biggest_fire_names, caption=\"Top 5 Biggest Fires in California History and their Names\")\n\n\nTable 6: Top 5 Biggest Fires in California History and their Names\nyear\nfire_name\ngis_acres\n2020\nAUGUST COMPLEX FIRES\n1032699.0\n2002\nBISCUIT\n501082.0\n2018\nRANCH\n410202.5\n2020\nSCU COMPLEX\n396399.0\n2020\nCREEK\n379882.2\n\n\n[1] \"A moment of condolences for anyone affected by the Camp Fire in Paradise or any other fire.\"\n  fire_name year unit_id gis_acres alarm_date  cont_date\n1      CAMP 2018     BTU  153335.6 2018-11-08 2018-11-26\n\nFire names are not unique and there are some fires that share the same name. There are many fire names that have been entered in incorrectly, that also contain back slashes or other gibberish.\nALARM_DATE\n\n\nnew_dates <- fires\nnew_dates$alarm_date <- as.Date(new_dates$alarm_date, \"%Y/%m/%d\")\nnew_dates$cont_date <- as.Date(new_dates$cont_date, \"%Y/%m/%d\")\nbusiest_days <- new_dates %>% \n  filter(!is.na(alarm_date)) %>% \n  group_by(alarm_date) %>% \n  summarise(num_fires = n(), \n            mean = mean(gis_acres), \n            median = median(gis_acres), \n            sd=sd(gis_acres)) %>% \n  arrange(desc(num_fires)) %>% \n  head(n=5)\nkable(busiest_days, caption=\"Top 5 Number of Daily Fires Since 1878\")\n\n\nTable 7: Top 5 Number of Daily Fires Since 1878\nalarm_date\nnum_fires\nmean\nmedian\nsd\n2008-06-21\n122\n5178.631\n245.33860\n16386.395\n1987-08-30\n61\n8144.967\n1932.24430\n13913.601\n2003-09-03\n56\n515.189\n58.68177\n1629.138\n2015-07-30\n50\n4250.587\n389.58737\n10438.913\n1999-08-23\n47\n7053.712\n1571.95800\n19095.666\n\nIt is hard to imagine that 122 fires are logged on June 6 even if it is a summer day. Before I analyze more time’s, lets find out the meaning behind this. One explanation is it could be a bunch of controlled burns. Many of these did share the same inc_number. However, many had different names and containment dates. While the primary cause on July 30, 2015 for lots of fires was smoking, on July 6, 2008 it was just lots of lightning.\nCONT_DATE\n\n\nformat <- \"%Y/%m/%d %H:%M:%S %z\"\nlongest_fires <- new_dates %>% \n  select(fire_name, alarm_date, cont_date, cause, objective) %>% \n  filter(!is.na(alarm_date) & !is.na(cont_date)) %>% \n  mutate(fire_duration = \n           difftime(cont_date, alarm_date, format, units=\"days\")) %>% \n  arrange(desc(fire_duration)) %>% \n  head(n=10)\nkable(longest_fires, caption=\"Longest Lasting Fires in California History Since 1878\")\n\n\nTable 8: Longest Lasting Fires in California History Since 1878\nfire_name\nalarm_date\ncont_date\ncause\nobjective\nfire_duration\nPIUTE\n1990-08-13\n1999-09-14\n1\n1\n3319 days\nRALSTON\n2006-09-05\n2007-09-17\n9\n1\n377 days\nWESTLAKE\n2006-07-08\n2007-07-09\n2\n1\n366 days\nLAVAL\n2012-06-03\n2013-06-03\n14\n1\n365 days\nGORGE\n2018-08-19\n2019-08-19\n14\n1\n365 days\nPANTHER\n2013-05-01\n2013-12-09\n9\n1\n222 days\nPOWERHOUSE\n2013-05-30\n2013-12-18\n9\n1\n202 days\nLAKE\n2015-06-17\n2015-12-31\n9\n1\n197 days\nROSASCO\n2019-05-23\n2019-12-02\n9\n1\n193 days\nPONY\n2016-06-07\n2016-12-15\n1\n1\n191 days\n\nIn the data set there are some alarm_dates and cont_dates entered incorrectly, like the cont_date occurring before the alarm_date. Hence, there is a possibility that these results have also been entered in incorrectly. The reason that some of these fires last so long, is that fire responders allow it, because it is in a rural area and fires can be beneficial. The cause for most of these fires is lightning, unknown, or miscellaneous.\n\n[1] “Fire Duration (Hours) Summary Statistics” Min. 1st Qu. Median Mean 3rd Qu. Max. 24 24 72 368 288 8760\n\nA problem is that there are so many missing values in cont_date there are very few fires you can find the fire duration for relative to the whole data set. Among those available, there is a huge variance in the duration of fires. These shorter lasting fires are not just prescribed burns and have many different causes.\nCAUSE\n\nTable 9: Causes of the Biggest Fires on Average since 1878\ncause\nstring_cause\navg_size\ncount\n4\nCampfire\n3530.47878\n380\n1\nLightning\n2969.34811\n3454\n16\nAircraft\n2474.22459\n14\n9\nMiscellaneous\n2285.43451\n3379\n7\nArson\n2200.11588\n903\n10\nVehicle\n1534.41743\n454\n14\nUnknown/Unidentified\n1496.36036\n9541\n2\nEquipment Use\n1460.92934\n1246\n11\nPower Line\n1274.56765\n412\n6\nRailroad\n1169.29763\n80\n3\nSmoking\n1048.65940\n342\n13\nNon-Firefighter Training\n1013.68027\n11\n5\nDebris\n875.22631\n723\n8\nPlaying with Fire\n657.54545\n196\n18\nEscaped Prescribed Burn\n623.48734\n90\n12\nFirefighter Training\n594.01999\n5\n15\nStructure\n391.06574\n21\n19\nIllegal Alien Campfire\n83.46374\n17\n\nAs I previously mentioned, the reason some fires duration is so long is because they are in remote areas and allowed to continue to burn. Despite this, human induced fires like campfires, still produce bigger fires on average than nature induced fires like lightning. In the next sections we will explore if certain causes of fires are becoming more or less frequent.\nCOMMENTS\nThe max length of a comment is 260 characters, comments are longer but they are cut off by an * indicating there is more to that comment somewhere. By reading comments interesting ones to me were “The cause was target shooting”, “… Total Cost 18,600,600”, “Children playing with fire”, and names of people. Most of the comments in the data set are empty.\nGIS_ACRES\n\nTable 10: Highest Acres Burnage in California History since 1878\nyear\ngis_acres\nsquare_miles\n2020\n4159334.0\n6498.959\n2018\n1590431.2\n2485.049\n2017\n1424559.4\n2225.874\n2008\n1382462.2\n2160.097\n2007\n1040224.3\n1625.350\n2003\n970479.3\n1516.374\n2002\n963898.5\n1506.091\n1987\n862910.9\n1348.298\n2012\n847714.6\n1324.554\n1999\n801137.0\n1251.777\n\nFor reference 500,000 acres is equal to 780 square miles, a square mile being a square with each side being 1 mile in length!!! The size of Yosemite national park is 1169 square miles, and the size of New York is 302 square miles.\n\n[1] \"Number of fire reports where the difference between report_ac and gis_acres is greater than 100: 1250\"\n\nThere are many differences between REPORT_AC and GIS_ACRES. Many of the discrepancies come from the 2000s as well so it is not the fault of the older data. There is less missing data for GIS_ACRES so we will primarily be depending on this. There is the possibility of using REPORT_AC data if GIS_ACRES is missing and vice versa.\nC_METHOD\n\n\nget_mode <- function(vec) { \n  frequencies <- table(vec) %>% sort(decreasing=TRUE)\n  strtoi(names(frequencies)[1])\n} \n\nc_method_yr <- fires %>% \n  filter(!is.na(c_method) & c_method != 8) %>%\n  group_by(year) %>%\n  summarise(c_method = get_mode(c_method))\nyear <- fires %>% filter(year == \"2020\")\n\n\n\n\n\n#Collection methods \nfirst_yr_c_method <- fires %>% select(year, c_method) %>% \n  drop_na() %>% arrange(year) %>% head()\ntotal_c <- table(fires$c_method)\nlabels <- c(\"GPS Ground\", \"GPS Air\", \"Infared\", \"Other Imagery\", \n            \"Photo Interpretation\", \"Hand Drawn\", \"Mixed Collection Tools\",\n            \"Unknown\")\ndf <- data.frame(Method = labels, count = as.vector(total_c))\ndf <- arrange(df, desc(count))\n\n\n\n\n\n\n\n\n\nHere we can see the transition of the most frequently used collection method as time goes on.\nOBJECTIVE\n\nTable 11: Top 5 Biggest Wildfires in California since 1878\nyear\nfire_name\ngis_acres\ncause\nobjective\n2020\nAUGUST COMPLEX FIRES\n1032699.0\n1\n1\n2002\nBISCUIT\n501082.0\n1\n1\n2018\nRANCH\n410202.5\n14\n1\n2020\nSCU COMPLEX\n396399.0\n1\n1\n2020\nCREEK\n379882.2\n14\n1\nTable 11: Top 5 Biggest Prescribed Burns since 1878\nyear\nfire_name\ngis_acres\ncause\nobjective\n2008\nCLOVER\n15788.590\n1\n2\n2008\nTEHIPITE\n11648.092\n1\n2\n1977\nFERGUSON\n10421.790\n1\n2\n2005\nCOMB\n9756.467\n1\n2\n2010\nSHEEP COMPLEX\n9021.522\n1\n2\n\nAs we saw previously with the longest lasting fires in recent history most of them originated from wildfires. It is interesting that the cause of the biggest prescribed fires have all been lightning. In fact, there are no prescribed burns that do not originate from lightning in this data set that has GIS_ACRES data.\n\n\n#Are number of prescribed burns increasing? \nyearly_resource_burns <- resource %>% \n  filter(!is.na(gis_acres) & gis_acres > 0) %>% \n  select(year, gis_acres) %>% \n  group_by(year) %>% \n  summarise(num_fires = n(), total_acres_burned = sum(gis_acres)) \n\n\n\n\n\n\nThe number of acres burned in prescribed burns has never been lower until this last decade. At the same time, California has experienced some of the worst fires in the last decade. While correlation does not prove causation, poor fire management in the off season may explain the recent surge in fires.\nExploratory Data Analysis\n\n\n# Number of acres burned 2010-2020\ndecade_fires <- fires %>% select(year, gis_acres) %>%\n  filter(year >= \"2010\" & !is.na(gis_acres)) \ndecade_fires_sum <- decade_fires %>% group_by(year) %>% \n  summarise(gis_acres = sum(gis_acres))\ndecade_fires_sum$gis_acres <- as.integer(decade_fires_sum$gis_acres)\nggplot(decade_fires_sum, aes(x=year, y=gis_acres)) + \n  geom_bar(stat=\"identity\", fill=\"gray70\") + \n  geom_text(aes(label=gis_acres)) + \n  xlab(\"Years\") + ylab(\"Acres Burned\") + \n  ggtitle(\"Number of Acres Burned 2010-2020\") \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nArson does not have much statistical analysis, it is just surprising how much land is burned every year due to this crime.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nConclusion\nThe biggest discovery is that the number of prescribed burns has never been lower from 2010-2020 in recent California Fire History. This may be cause for why we have seen such a big spike in fires in recent history. Also, R’s ggplot makes it extremely difficult to customize your graph.\n\n\n\n",
    "preview": "posts/2022-03-02-firehistory/firehistory_files/figure-html5/unnamed-chunk-4-1.png",
    "last_modified": "2022-03-02T05:30:26-08:00",
    "input_file": {}
  },
  {
    "path": "posts/2022-03-02-scout/",
    "title": "Scout",
    "description": "A cross platform mobile app for iOS and Android devices. This project was built using the Flutter framework by Google. This is an application for ordering girl scout cookies and gives girl scouts a dashboad to control their inventory.",
    "author": [
      {
        "name": "Tommy Smale",
        "url": {}
      }
    ],
    "date": "2022-03-02",
    "categories": [],
    "contents": "\nLaunch Screen\nScout logoCookie Menu\n A menu to browse cookies and add to your cart. When you are at the cart, you are can return to the menu and edit your order. Once you are finished with your order you are taken to a form to fill out cookie order information.\nOrder Form\n Information is verified to be correct like a valid phone number and email address. A drop down menu is expanded to select the proper state and only orders from the USA are currently accepted.\nDatabase\n This page fetches data from the database so the scout can view order information for their customers.\nStats\n Data visualizations to see trends in cookie sales and track inventory.\nEvents\n Scouts have the ability to create events so people can be notified when and where they are selling cookies.\n\n\n\n",
    "preview": {},
    "last_modified": "2022-03-02T05:32:51-08:00",
    "input_file": {}
  },
  {
    "path": "posts/2022-01-01-ios-dev/",
    "title": "iOS development",
    "description": "Swift is an open source programming language Apple uses for iOS, macOS, tvOS, and other devices. These examples are with UIKit a more mature and compatible framework than SwiftUI at the time of this writing (2022). This is programatically done in UIKit without the use of Storyboard. This approach was taken so that the app would run more efficiently and there would be more control over existing frameworks.",
    "author": [
      {
        "name": "Tommy Smale",
        "url": {}
      }
    ],
    "date": "2022-02-01",
    "categories": [],
    "contents": "\nUsing Apple Maps\n The application incorporates Apple’s most up to date privacy guidelines. Certain features are available depending on the user’s comfort level providing location data. If the user allows location, the map will focus on their current location.\nLocation Search Controller\n The user can enter in a location to annotate the map. The search controller uses data from Apple’s MapKit to respond with real live locations data like address, lng/lat, and place name. The location data cheats and looks for locations nearest you.\nUIButton\n This is a password protected application for encrypting information on your device. Once unlocked with your password the user has a UICollectionView to store data.\nProgramming the constraints\n Proper construction of constraints allows your application to scale to smaller devices like the iPhone 4 and bigger devices like the iPhone 10. The code for specifying the constraints for these 9 buttons is much more efficient than using storyboard for all 9 UIButtons.\nUITableViewController\n A UITableViewController is one of the most frequently used ViewControllers alongise the ever more popular UICollectionView. This is a scrollable feed where user’s can see their friends posts.\nProgramming a UITableViewController\n It is not that much code to programatically create a UITableViewController. However, there is another class for configuring the cell. The UITableViewCell class is a template that contains a UIImage and UITextView, but can be customized further.\n\n\n\n",
    "preview": {},
    "last_modified": "2022-03-02T04:08:43-08:00",
    "input_file": {}
  },
  {
    "path": "posts/2022-02-01-find-the-giraffe/",
    "title": "Find the Giraffe",
    "description": "Refresh the page to play again.",
    "author": [
      {
        "name": "Tommy Smale",
        "url": {}
      }
    ],
    "date": "2022-02-01",
    "categories": [],
    "contents": "\n\n\nfill_vector <- function(item, size) { \n  size <- size*size\n  tiger <- c(seq(1, size)) \n  for(i in seq(1, size)) { \n    tiger[i] <- item\n  }\n  tiger \n}\nsize <- 12\ntiger <- fill_vector('🐯', size) \ntiger <- matrix(tiger, nrow=size, ncol=size)\n#Pick a random position to have a giraffe \ngiraffe_position <- sample(seq(1,size*size))[1]\ntiger[giraffe_position] <- '🦒'\ntiger\n\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10] [,11] [,12]\n [1,] \"🐯\" \"🐯\" \"🐯\" \"🐯\" \"🐯\" \"🐯\" \"🐯\" \"🐯\" \"🐯\" \"🐯\"  \"🐯\"  \"🐯\" \n [2,] \"🐯\" \"🐯\" \"🐯\" \"🐯\" \"🐯\" \"🐯\" \"🐯\" \"🐯\" \"🐯\" \"🐯\"  \"🐯\"  \"🐯\" \n [3,] \"🐯\" \"🐯\" \"🐯\" \"🐯\" \"🐯\" \"🐯\" \"🐯\" \"🐯\" \"🐯\" \"🐯\"  \"🐯\"  \"🐯\" \n [4,] \"🐯\" \"🐯\" \"🐯\" \"🐯\" \"🐯\" \"🐯\" \"🐯\" \"🐯\" \"🐯\" \"🐯\"  \"🐯\"  \"🐯\" \n [5,] \"🐯\" \"🐯\" \"🐯\" \"🐯\" \"🐯\" \"🐯\" \"🐯\" \"🐯\" \"🐯\" \"🐯\"  \"🐯\"  \"🦒\" \n [6,] \"🐯\" \"🐯\" \"🐯\" \"🐯\" \"🐯\" \"🐯\" \"🐯\" \"🐯\" \"🐯\" \"🐯\"  \"🐯\"  \"🐯\" \n [7,] \"🐯\" \"🐯\" \"🐯\" \"🐯\" \"🐯\" \"🐯\" \"🐯\" \"🐯\" \"🐯\" \"🐯\"  \"🐯\"  \"🐯\" \n [8,] \"🐯\" \"🐯\" \"🐯\" \"🐯\" \"🐯\" \"🐯\" \"🐯\" \"🐯\" \"🐯\" \"🐯\"  \"🐯\"  \"🐯\" \n [9,] \"🐯\" \"🐯\" \"🐯\" \"🐯\" \"🐯\" \"🐯\" \"🐯\" \"🐯\" \"🐯\" \"🐯\"  \"🐯\"  \"🐯\" \n[10,] \"🐯\" \"🐯\" \"🐯\" \"🐯\" \"🐯\" \"🐯\" \"🐯\" \"🐯\" \"🐯\" \"🐯\"  \"🐯\"  \"🐯\" \n[11,] \"🐯\" \"🐯\" \"🐯\" \"🐯\" \"🐯\" \"🐯\" \"🐯\" \"🐯\" \"🐯\" \"🐯\"  \"🐯\"  \"🐯\" \n[12,] \"🐯\" \"🐯\" \"🐯\" \"🐯\" \"🐯\" \"🐯\" \"🐯\" \"🐯\" \"🐯\" \"🐯\"  \"🐯\"  \"🐯\" \n\n\n\n\n",
    "preview": {},
    "last_modified": "2022-02-11T18:57:45-08:00",
    "input_file": {}
  }
]
